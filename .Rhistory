# Gestion de la colonne des avantages
# On récupère tous les avantages existants pour les étudier
liste_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>% # On retire la valeur "None"
distinct(Avantages)  # On ne garde que les avantages uniques
View(liste_avantages)
# Définition du score pour chaque avantage
score_avantages <- c(
"Verrouille vote" = 1, "Double vote" = 1, "Demi Collier" = 1.5, "Miroir" = 4.5,
"Collier" = 4, "Steal vote" = 1, "Bloque vote" = 1, "Miroir Malefique" = 3.25,
"De d'immunite" = 3, "L'epee du prince noir (Totem)" = 2, "Couronne (Collier)" = 4,
"Fragment (3 votes)" = 2.5, "Demi diamant" = 3.75, "Super Idol" = 5
)
# Séparer les avantages et calculer les scores pour chaque joueur
data_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>%
mutate(Score = score_avantages[Avantages]) %>%
group_by(Joueur, Saison) %>%
summarise(Score = sum(Score, na.rm = TRUE), .groups = "drop")
View(data_avantages)
# Compter la somme des scores par saison
avantages_par_saison <- data_avantages %>%
group_by(Saison) %>%
summarise(
Score_Saison = sum(Score, na.rm = TRUE)
)
View(avantages_par_saison)
data <- data %>%
left_join(avantages_par_saison, by = "Saison") # %>%
left_join(data_avantages, by = c("Joueur", "Saison")) %>%
mutate(Score = replace_na(Score, 0))
mutate(Score_Particulier = Score / Score_Total)
View(data)
data <- data %>%
#left_join(avantages_par_saison, by = "Saison") # %>%
left_join(data_avantages, by = c("Joueur", "Saison")) %>%
mutate(Score = replace_na(Score, 0))
mutate(Score_Particulier = Score / Score_Total)
View(data)
library(FactoMineR)
library(factoextra)
library(readxl)
library(dplyr)
library(tidyr)
getwd()
setwd("C:/Users/admin/Documents/RAYANE DOSSIER ETUDES/KM-Survivor-Analytics")
# Lecture du fichier excel
data <- read_excel("KM_data.xlsx")
# Traitement des cases vides dans le dataset
colSums(is.na(data))
data <- data %>%
mutate(across(everything(), ~replace(., is.na(.), "None")))
# Gestion des joueurs ayant participés plus d'une fois
data <- data %>%
mutate(Joueur = ifelse(Already == 1,
Nom,  # Si Already == 1, on garde juste le Nom
paste(Nom, "_S", Saison, sep = "")))  # Sinon, on concatène Nom avec "_S" + Saison
# Gestion de la colonne des avantages
# On récupère tous les avantages existants pour les étudier
liste_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>% # On retire la valeur "None"
distinct(Avantages)  # On ne garde que les avantages uniques
View(liste_avantages)
# Définition du score pour chaque avantage
score_avantages <- c(
"Verrouille vote" = 1, "Double vote" = 1, "Demi Collier" = 1.5, "Miroir" = 4.5,
"Collier" = 4, "Steal vote" = 1, "Bloque vote" = 1, "Miroir Malefique" = 3.25,
"De d'immunite" = 3, "L'epee du prince noir (Totem)" = 2, "Couronne (Collier)" = 4,
"Fragment (3 votes)" = 2.5, "Demi diamant" = 3.75, "Super Idol" = 5
)
# Séparer les avantages et calculer les scores pour chaque joueur
data_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>%
mutate(Score = score_avantages[Avantages]) %>%
group_by(Joueur, Saison) %>%
summarise(Score = sum(Score, na.rm = TRUE), .groups = "drop")
View(data_avantages)
# Compter la somme des scores par saison
avantages_par_saison <- data_avantages %>%
group_by(Saison) %>%
summarise(
Score_Saison = sum(Score, na.rm = TRUE)
)
View(avantages_par_saison)
data <- data %>%
left_join(avantages_par_saison, by = "Saison") # %>%
left_join(data_avantages, by = c("Joueur", "Saison")) %>%
mutate(Score = replace_na(Score, 0))
mutate(Score_Particulier = Score / Score_Total)
View(data)
library(FactoMineR)
library(factoextra)
library(readxl)
library(dplyr)
library(tidyr)
getwd()
setwd("C:/Users/admin/Documents/RAYANE DOSSIER ETUDES/KM-Survivor-Analytics")
# Lecture du fichier excel
data <- read_excel("KM_data.xlsx")
# Traitement des cases vides dans le dataset
colSums(is.na(data))
data <- data %>%
mutate(across(everything(), ~replace(., is.na(.), "None")))
# Gestion des joueurs ayant participés plus d'une fois
data <- data %>%
mutate(Joueur = ifelse(Already == 1,
Nom,  # Si Already == 1, on garde juste le Nom
paste(Nom, "_S", Saison, sep = "")))  # Sinon, on concatène Nom avec "_S" + Saison
# Gestion de la colonne des avantages
# On récupère tous les avantages existants pour les étudier
liste_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>% # On retire la valeur "None"
distinct(Avantages)  # On ne garde que les avantages uniques
View(liste_avantages)
# Définition du score pour chaque avantage
score_avantages <- c(
"Verrouille vote" = 1, "Double vote" = 1, "Demi Collier" = 1.5, "Miroir" = 4.5,
"Collier" = 4, "Steal vote" = 1, "Bloque vote" = 1, "Miroir Malefique" = 3.25,
"De d'immunite" = 3, "L'epee du prince noir (Totem)" = 2, "Couronne (Collier)" = 4,
"Fragment (3 votes)" = 2.5, "Demi diamant" = 3.75, "Super Idol" = 5
)
# Séparer les avantages et calculer les scores pour chaque joueur
data_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>%
mutate(Score = score_avantages[Avantages]) %>%
group_by(Joueur, Saison) %>%
summarise(Score = sum(Score, na.rm = TRUE), .groups = "drop")
View(data_avantages)
# Compter la somme des scores par saison
avantages_par_saison <- data_avantages %>%
group_by(Saison) %>%
summarise(
Score_Saison = sum(Score, na.rm = TRUE)
)
View(avantages_par_saison)
data <- data %>%
left_join(data_avantages, by = c("Joueur", "Saison")) %>%
mutate(Score = replace_na(Score, 0))
View(data)
data <- data %>%
left_join(avantages_par_saison, by = "Saison") # %>%
View(data)
library(FactoMineR)
library(factoextra)
library(readxl)
library(dplyr)
library(tidyr)
getwd()
setwd("C:/Users/admin/Documents/RAYANE DOSSIER ETUDES/KM-Survivor-Analytics")
# Lecture du fichier excel
data <- read_excel("KM_data.xlsx")
# Traitement des cases vides dans le dataset
colSums(is.na(data))
data <- data %>%
mutate(across(everything(), ~replace(., is.na(.), "None")))
# Gestion des joueurs ayant participés plus d'une fois
data <- data %>%
mutate(Joueur = ifelse(Already == 1,
Nom,  # Si Already == 1, on garde juste le Nom
paste(Nom, "_S", Saison, sep = "")))  # Sinon, on concatène Nom avec "_S" + Saison
# Gestion de la colonne des avantages
# On récupère tous les avantages existants pour les étudier
liste_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>% # On retire la valeur "None"
distinct(Avantages)  # On ne garde que les avantages uniques
View(liste_avantages)
# Définition du score pour chaque avantage
score_avantages <- c(
"Verrouille vote" = 1, "Double vote" = 1, "Demi Collier" = 1.5, "Miroir" = 4.5,
"Collier" = 4, "Steal vote" = 1, "Bloque vote" = 1, "Miroir Malefique" = 3.25,
"De d'immunite" = 3, "L'epee du prince noir (Totem)" = 2, "Couronne (Collier)" = 4,
"Fragment (3 votes)" = 2.5, "Demi diamant" = 3.75, "Super Idol" = 5
)
# Séparer les avantages et calculer les scores pour chaque joueur
data_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>%
mutate(Score = score_avantages[Avantages]) %>%
group_by(Joueur, Saison) %>%
summarise(Score = sum(Score, na.rm = TRUE), .groups = "drop")
View(data_avantages)
# Compter la somme des scores par saison
avantages_par_saison <- data_avantages %>%
group_by(Saison) %>%
summarise(
Score_Saison = sum(Score, na.rm = TRUE)
)
View(avantages_par_saison)
data <- data %>%
left_join(data_avantages, by = c("Joueur", "Saison")) %>%
mutate(Score = replace_na(Score, 0))
data <- data %>%
left_join(avantages_par_saison, by = "Saison") # %>%
mutate(Score_Particulier = Score / Score_Saison)
View(data)
library(FactoMineR)
library(factoextra)
library(readxl)
library(dplyr)
library(tidyr)
getwd()
setwd("C:/Users/admin/Documents/RAYANE DOSSIER ETUDES/KM-Survivor-Analytics")
# Lecture du fichier excel
data <- read_excel("KM_data.xlsx")
# Traitement des cases vides dans le dataset
colSums(is.na(data))
data <- data %>%
mutate(across(everything(), ~replace(., is.na(.), "None")))
# Gestion des joueurs ayant participés plus d'une fois
data <- data %>%
mutate(Joueur = ifelse(Already == 1,
Nom,  # Si Already == 1, on garde juste le Nom
paste(Nom, "_S", Saison, sep = "")))  # Sinon, on concatène Nom avec "_S" + Saison
# Gestion de la colonne des avantages
# On récupère tous les avantages existants pour les étudier
liste_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>% # On retire la valeur "None"
distinct(Avantages)  # On ne garde que les avantages uniques
View(liste_avantages)
# Définition du score pour chaque avantage
score_avantages <- c(
"Verrouille vote" = 1, "Double vote" = 1, "Demi Collier" = 1.5, "Miroir" = 4.5,
"Collier" = 4, "Steal vote" = 1, "Bloque vote" = 1, "Miroir Malefique" = 3.25,
"De d'immunite" = 3, "L'epee du prince noir (Totem)" = 2, "Couronne (Collier)" = 4,
"Fragment (3 votes)" = 2.5, "Demi diamant" = 3.75, "Super Idol" = 5
)
# Séparer les avantages et calculer les scores pour chaque joueur
data_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>%
mutate(Score = score_avantages[Avantages]) %>%
group_by(Joueur, Saison) %>%
summarise(Score = sum(Score, na.rm = TRUE), .groups = "drop")
View(data_avantages)
# Compter la somme des scores par saison
avantages_par_saison <- data_avantages %>%
group_by(Saison) %>%
summarise(
Score_Saison = sum(Score, na.rm = TRUE)
)
View(avantages_par_saison)
data <- data %>%
left_join(data_avantages, by = c("Joueur", "Saison")) %>%
mutate(Score = replace_na(Score, 0))
data <- data %>%
left_join(avantages_par_saison, by = "Saison") # %>%
data <- data %>%
mutate(Score_Particulier = Score / Score_Total)
View(data)
data <- data %>%
left_join(data_avantages, by = c("Joueur", "Saison")) %>%
mutate(Score = replace_na(Score, 0))
data <- data %>%
left_join(avantages_par_saison, by = "Saison") # %>%
data <- data %>%
mutate(Score_Particulier = Score / Score_Saison)
library(FactoMineR)
library(factoextra)
library(readxl)
library(dplyr)
library(tidyr)
getwd()
setwd("C:/Users/admin/Documents/RAYANE DOSSIER ETUDES/KM-Survivor-Analytics")
# Lecture du fichier excel
data <- read_excel("KM_data.xlsx")
# Traitement des cases vides dans le dataset
colSums(is.na(data))
data <- data %>%
mutate(across(everything(), ~replace(., is.na(.), "None")))
# Gestion des joueurs ayant participés plus d'une fois
data <- data %>%
mutate(Joueur = ifelse(Already == 1,
Nom,  # Si Already == 1, on garde juste le Nom
paste(Nom, "_S", Saison, sep = "")))  # Sinon, on concatène Nom avec "_S" + Saison
# Gestion de la colonne des avantages
# On récupère tous les avantages existants pour les étudier
liste_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>% # On retire la valeur "None"
distinct(Avantages)  # On ne garde que les avantages uniques
View(liste_avantages)
library(FactoMineR)
library(factoextra)
library(readxl)
library(dplyr)
library(tidyr)
getwd()
setwd("C:/Users/admin/Documents/RAYANE DOSSIER ETUDES/KM-Survivor-Analytics")
# Lecture du fichier excel
data <- read_excel("KM_data.xlsx")
# Traitement des cases vides dans le dataset
colSums(is.na(data))
data <- data %>%
mutate(across(everything(), ~replace(., is.na(.), "None")))
# Gestion des joueurs ayant participés plus d'une fois
data <- data %>%
mutate(Joueur = ifelse(Already == 1,
Nom,  # Si Already == 1, on garde juste le Nom
paste(Nom, "_S", Saison, sep = "")))  # Sinon, on concatène Nom avec "_S" + Saison
# Gestion de la colonne des avantages
# On récupère tous les avantages existants pour les étudier
liste_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>% # On retire la valeur "None"
distinct(Avantages)  # On ne garde que les avantages uniques
Print(liste_avantages)
library(FactoMineR)
library(factoextra)
library(readxl)
library(dplyr)
library(tidyr)
getwd()
setwd("C:/Users/admin/Documents/RAYANE DOSSIER ETUDES/KM-Survivor-Analytics")
# Lecture du fichier excel
data <- read_excel("KM_data.xlsx")
# Traitement des cases vides dans le dataset
colSums(is.na(data))
data <- data %>%
mutate(across(everything(), ~replace(., is.na(.), "None")))
# Gestion des joueurs ayant participés plus d'une fois
data <- data %>%
mutate(Joueur = ifelse(Already == 1,
Nom,  # Si Already == 1, on garde juste le Nom
paste(Nom, "_S", Saison, sep = "")))  # Sinon, on concatène Nom avec "_S" + Saison
# Gestion de la colonne des avantages
# On récupère tous les avantages existants pour les étudier
liste_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>% # On retire la valeur "None"
distinct(Avantages)  # On ne garde que les avantages uniques
print(liste_avantages)
# Définition du score pour chaque avantage
score_avantages <- c(
"Verrouille vote" = 1, "Double vote" = 1, "Demi Collier" = 1.5, "Miroir" = 4.5,
"Collier" = 4, "Steal vote" = 1, "Bloque vote" = 1, "Miroir Malefique" = 3.25,
"De d'immunite" = 3, "L'epee du prince noir (Totem)" = 2, "Couronne (Collier)" = 4,
"Fragment (3 votes)" = 2.5, "Demi diamant" = 3.75, "Super Idol" = 5
)
# Séparer les avantages et calculer les scores pour chaque joueur
data_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>%
mutate(Score = score_avantages[Avantages]) %>%
group_by(Joueur, Saison) %>%
summarise(Score = sum(Score, na.rm = TRUE), .groups = "drop")
print(data_avantages)
# Compter la somme des scores par saison
avantages_par_saison <- data_avantages %>%
group_by(Saison) %>%
summarise(
Score_Saison = sum(Score, na.rm = TRUE)
)
print(avantages_par_saison)
data <- data %>%
left_join(data_avantages, by = c("Joueur", "Saison")) %>%
mutate(Score = replace_na(Score, 0))
data <- data %>%
left_join(avantages_par_saison, by = "Saison") # %>%
data <- data %>%
mutate(Score_Particulier = Score / Score_Saison)
View(data)
# On retire les colonnes Non utilisable pour l'analyse des joueurs
data_old <- data # Sauvegarde du tableau pour plus tard
data <- data %>%
select(-Nom, -Already, -Saison, -Team, -Swap_Team, -Joueur, -Avantages, -Score -Score_Saison)
View(data)
library(FactoMineR)
library(factoextra)
library(readxl)
library(dplyr)
library(tidyr)
getwd()
setwd("C:/Users/admin/Documents/RAYANE DOSSIER ETUDES/KM-Survivor-Analytics")
# Lecture du fichier excel
data <- read_excel("KM_data.xlsx")
# Traitement des cases vides dans le dataset
colSums(is.na(data))
data <- data %>%
mutate(across(everything(), ~replace(., is.na(.), "None")))
# Gestion des joueurs ayant participés plus d'une fois
data <- data %>%
mutate(Joueur = ifelse(Already == 1,
Nom,  # Si Already == 1, on garde juste le Nom
paste(Nom, "_S", Saison, sep = "")))  # Sinon, on concatène Nom avec "_S" + Saison
# Gestion de la colonne des avantages
# On récupère tous les avantages existants pour les étudier
liste_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>% # On retire la valeur "None"
distinct(Avantages)  # On ne garde que les avantages uniques
print(liste_avantages)
# Définition du score pour chaque avantage
score_avantages <- c(
"Verrouille vote" = 1, "Double vote" = 1, "Demi Collier" = 1.5, "Miroir" = 4.5,
"Collier" = 4, "Steal vote" = 1, "Bloque vote" = 1, "Miroir Malefique" = 3.25,
"De d'immunite" = 3, "L'epee du prince noir (Totem)" = 2, "Couronne (Collier)" = 4,
"Fragment (3 votes)" = 2.5, "Demi diamant" = 3.75, "Super Idol" = 5
)
# Séparer les avantages et calculer les scores pour chaque joueur
data_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>%
mutate(Score = score_avantages[Avantages]) %>%
group_by(Joueur, Saison) %>%
summarise(Score = sum(Score, na.rm = TRUE), .groups = "drop")
print(data_avantages)
# Compter la somme des scores par saison
avantages_par_saison <- data_avantages %>%
group_by(Saison) %>%
summarise(
Score_Saison = sum(Score, na.rm = TRUE)
)
print(avantages_par_saison)
data <- data %>%
left_join(data_avantages, by = c("Joueur", "Saison")) %>%
mutate(Score = replace_na(Score, 0))
data <- data %>%
left_join(avantages_par_saison, by = "Saison") # %>%
data <- data %>%
mutate(Score_Particulier = Score / Score_Saison)
View(data)
# On retire les colonnes Non utilisable pour l'analyse des joueurs
data_old <- data # Sauvegarde du tableau pour plus tard
data <- data %>%
select(-Nom, -Already, -Saison, -Team, -Swap_Team, -Joueur, -Avantages, -Score -Score_Saison)
View(data)
library(FactoMineR)
library(factoextra)
library(readxl)
library(dplyr)
library(tidyr)
getwd()
setwd("C:/Users/admin/Documents/RAYANE DOSSIER ETUDES/KM-Survivor-Analytics")
# Lecture du fichier excel
data <- read_excel("KM_data.xlsx")
# Traitement des cases vides dans le dataset
colSums(is.na(data))
data <- data %>%
mutate(across(everything(), ~replace(., is.na(.), "None")))
# Gestion des joueurs ayant participés plus d'une fois
data <- data %>%
mutate(Joueur = ifelse(Already == 1,
Nom,  # Si Already == 1, on garde juste le Nom
paste(Nom, "_S", Saison, sep = "")))  # Sinon, on concatène Nom avec "_S" + Saison
# Gestion de la colonne des avantages
# On récupère tous les avantages existants pour les étudier
liste_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>% # On retire la valeur "None"
distinct(Avantages)  # On ne garde que les avantages uniques
print(liste_avantages)
# Définition du score pour chaque avantage
score_avantages <- c(
"Verrouille vote" = 1, "Double vote" = 1, "Demi Collier" = 1.5, "Miroir" = 4.5,
"Collier" = 4, "Steal vote" = 1, "Bloque vote" = 1, "Miroir Malefique" = 3.25,
"De d'immunite" = 3, "L'epee du prince noir (Totem)" = 2, "Couronne (Collier)" = 4,
"Fragment (3 votes)" = 2.5, "Demi diamant" = 3.75, "Super Idol" = 5
)
# Séparer les avantages et calculer les scores pour chaque joueur
data_avantages <- data %>%
separate_rows(Avantages, sep = ",") %>%
mutate(Avantages = trimws(Avantages)) %>%
filter(Avantages != "None") %>%
mutate(Score = score_avantages[Avantages]) %>%
group_by(Joueur, Saison) %>%
summarise(Score = sum(Score, na.rm = TRUE), .groups = "drop")
print(data_avantages)
# Compter la somme des scores par saison
avantages_par_saison <- data_avantages %>%
group_by(Saison) %>%
summarise(
Score_Saison = sum(Score, na.rm = TRUE)
)
print(avantages_par_saison)
data <- data %>%
left_join(data_avantages, by = c("Joueur", "Saison")) %>%
mutate(Score = replace_na(Score, 0))
data <- data %>%
left_join(avantages_par_saison, by = "Saison") # %>%
data <- data %>%
mutate(Score_Particulier = Score / Score_Saison)
View(data)
# On retire les colonnes Non utilisable pour l'analyse des joueurs
data_old <- data # Sauvegarde du tableau pour plus tard
data <- data %>%
select(-Nom, -Already, -Saison, -Team, -Swap_Team, -Joueur, -Avantages)
View(data)
